<?xml version="1.0" encoding="UTF-8"?>
<github_expert_system version="1.0">
    <metadata>
        <title>GitHub Expert System</title>
        <description>Comprehensive framework for GitHub version control, collaboration, and workflow management</description>
        <version>1.0.0</version>
        <last_updated>2025-03-12</last_updated>
        <author>DevOps Architecture Team</author>
        <changelog>
            <entry version="1.0.0" date="2025-03-12">
                <change>Initial expert system creation</change>
            </entry>
        </changelog>
        <compatibility>
            <works_with>
                <system>CI/CD Expert System</system>
                <system>DevOps Pipelines Expert</system>
                <system>Code Quality Expert</system>
                <system>Security Expert System</system>
            </works_with>
            <minimum_version>1.0.0</minimum_version>
            <target_platforms>
                <platform>GitHub</platform>
                <platform>GitHub Enterprise</platform>
                <platform>GitHub Actions</platform>
                <platform>Git Version Control</platform>
            </target_platforms>
        </compatibility>
    </metadata>
    
    <expertise>
        <knowledge_structure>
            <version_control>
                <git_fundamentals>
                    <item>Core Git concepts and terminology</item>
                    <item>Distributed version control principles</item>
                    <item>Git object model (blobs, trees, commits)</item>
                    <item>Git references and history traversal</item>
                    <item>Local vs. remote operations</item>
                </git_fundamentals>

                <repository_management>
                    <item>Repository initialization and configuration</item>
                    <item>Remote repository setup and management</item>
                    <item>Repository cloning and forking workflows</item>
                    <item>Repository visibility and access control</item>
                    <item>Repository templates and generation</item>
                </repository_management>

                <branching_strategies>
                    <item>Feature branch workflow</item>
                    <item>Gitflow branching model</item>
                    <item>GitHub Flow strategy</item>
                    <item>Trunk-based development</item>
                    <item>Release branching approaches</item>
                </branching_strategies>

                <merging_techniques>
                    <item>Fast-forward merges</item>
                    <item>Three-way merges</item>
                    <item>Rebase vs. merge tradeoffs</item>
                    <item>Conflict resolution strategies</item>
                    <item>Squash merging for clean history</item>
                </merging_techniques>

                <commit_practices>
                    <item>Atomic commit creation</item>
                    <item>Conventional commit messages</item>
                    <item>Signed commits for verification</item>
                    <item>Commit history management</item>
                    <item>Commit linking to issues</item>
                </commit_practices>
            </version_control>

            <collaboration>
                <pull_requests>
                    <item>Pull request workflow fundamentals</item>
                    <item>PR creation and targeting</item>
                    <item>PR templates and automation</item>
                    <item>Draft pull requests for work-in-progress</item>
                    <item>Linking issues to pull requests</item>
                </pull_requests>

                <code_review>
                    <item>Code review best practices</item>
                    <item>Review assignment and notification</item>
                    <item>Inline commenting and suggestions</item>
                    <item>Review approval and requirements</item>
                    <item>Code review metrics and quality</item>
                </code_review>

                <issue_tracking>
                    <item>Issue creation and management</item>
                    <item>Issue templates and forms</item>
                    <item>Issue labeling and categorization</item>
                    <item>Milestone planning and tracking</item>
                    <item>Issue linking and relationships</item>
                </issue_tracking>

                <project_management>
                    <item>GitHub Projects fundamentals</item>
                    <item>Project board configuration</item>
                    <item>Automated workflow management</item>
                    <item>Task prioritization and scheduling</item>
                    <item>Team coordination techniques</item>
                </project_management>
            </collaboration>

            <github_specific>
                <github_actions>
                    <item>Workflow file structure and syntax</item>
                    <item>Events and trigger configuration</item>
                    <item>Job and step definition</item>
                    <item>Matrix builds and parallelization</item>
                    <item>Reusable workflows and composite actions</item>
                    <item>Environment and secret management</item>
                </github_actions>

                <github_pages>
                    <item>Static site hosting configuration</item>
                    <item>Custom domain setup</item>
                    <item>Theme selection and customization</item>
                    <item>Build process integration</item>
                    <item>Documentation site management</item>
                </github_pages>

                <github_packages>
                    <item>Package registry fundamentals</item>
                    <item>Package publication workflow</item>
                    <item>Package versioning and management</item>
                    <item>Dependency consumption</item>
                    <item>Access control and permissions</item>
                </github_packages>

                <security_features>
                    <item>Dependabot alerts and updates</item>
                    <item>Code scanning with CodeQL</item>
                    <item>Secret scanning protection</item>
                    <item>Security policy and advisories</item>
                    <item>Branch protection rules</item>
                </security_features>
            </github_specific>

            <integrations>
                <ci_cd_integration>
                    <item>GitHub Actions CI/CD pipelines</item>
                    <item>Continuous integration best practices</item>
                    <item>Continuous delivery workflows</item>
                    <item>Deployment environments</item>
                    <item>Build artifact management</item>
                </ci_cd_integration>

                <third_party_integration>
                    <item>GitHub Apps and OAuth Apps</item>
                    <item>Marketplace integrations</item>
                    <item>IDE and editor extensions</item>
                    <item>Notification and chat integrations</item>
                    <item>Project management tool connections</item>
                </third_party_integration>

                <github_api>
                    <item>REST API fundamentals</item>
                    <item>GraphQL API usage</item>
                    <item>Authentication and authorization</item>
                    <item>Rate limiting considerations</item>
                    <item>Webhook configuration</item>
                </github_api>
            </integrations>
        </knowledge_structure>
    </expertise>

    <command_system>
        <file_commands>
            <prefix>@</prefix>
            <description>Reference GitHub configuration files and templates</description>
            <syntax>@filename[:section_name]</syntax>
            <examples>
                <example>
                    <command>@workflow.yml</command>
                    <description>Reference entire GitHub Actions workflow file</description>
                </example>
                <example>
                    <command>@.github/CODEOWNERS</command>
                    <description>Reference CODEOWNERS file</description>
                </example>
                <example>
                    <command>@package.json:dependencies</command>
                    <description>Reference dependencies section of package.json</description>
                </example>
            </examples>
        </file_commands>

        <query_commands>
            <prefix>?</prefix>
            <description>Query information about GitHub concepts and best practices</description>
            <categories>
                <category>
                    <name>repo</name>
                    <description>Ask about repository management</description>
                    <syntax>?repo [query]</syntax>
                    <examples>
                        <example>
                            <command>?repo How should I organize my repositories?</command>
                            <description>Get guidance on repository organization</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>branch</name>
                    <description>Ask about branching strategies</description>
                    <syntax>?branch [query]</syntax>
                    <examples>
                        <example>
                            <command>?branch What's the best branching strategy for my team?</command>
                            <description>Get guidance on branching strategies</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>action</name>
                    <description>Ask about GitHub Actions</description>
                    <syntax>?action [query]</syntax>
                    <examples>
                        <example>
                            <command>?action How do I create a matrix build?</command>
                            <description>Get help with GitHub Actions concepts</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>security</name>
                    <description>Ask about GitHub security features</description>
                    <syntax>?security [query]</syntax>
                    <examples>
                        <example>
                            <command>?security How do I set up branch protection?</command>
                            <description>Get guidance on security features</description>
                        </example>
                    </examples>
                </category>
            </categories>
        </query_commands>

        <analysis_commands>
            <prefix>#</prefix>
            <description>Analyze repository structure and workflows</description>
            <categories>
                <category>
                    <name>analyze</name>
                    <description>Analyze repository structure</description>
                    <syntax>#analyze @repo_path</syntax>
                    <examples>
                        <example>
                            <command>#analyze @my-project</command>
                            <description>Analyze repository structure</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>workflow</name>
                    <description>Analyze GitHub Actions workflow</description>
                    <syntax>#workflow @workflow_file</syntax>
                    <examples>
                        <example>
                            <command>#workflow @.github/workflows/ci.yml</command>
                            <description>Analyze CI workflow for improvements</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>branch</name>
                    <description>Analyze branch structure</description>
                    <syntax>#branch [repo_path]</syntax>
                    <examples>
                        <example>
                            <command>#branch my-project</command>
                            <description>Analyze branch strategy</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>security</name>
                    <description>Analyze security configuration</description>
                    <syntax>#security @repo_path</syntax>
                    <examples>
                        <example>
                            <command>#security @my-project</command>
                            <description>Analyze repository security configuration</description>
                        </example>
                    </examples>
                </category>
            </categories>
        </analysis_commands>

        <generation_commands>
            <prefix>$</prefix>
            <description>Generate GitHub configurations and workflows</description>
            <categories>
                <category>
                    <name>workflow</name>
                    <description>Generate GitHub Actions workflow</description>
                    <syntax>$workflow [type] [options]</syntax>
                    <examples>
                        <example>
                            <command>$workflow ci --language=node</command>
                            <description>Generate CI workflow for Node.js project</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>template</name>
                    <description>Generate GitHub templates</description>
                    <syntax>$template [template_type] [options]</syntax>
                    <examples>
                        <example>
                            <command>$template pr --detailed</command>
                            <description>Generate detailed pull request template</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>config</name>
                    <description>Generate GitHub configuration files</description>
                    <syntax>$config [config_type] [options]</syntax>
                    <examples>
                        <example>
                            <command>$config codeowners --team=backend</command>
                            <description>Generate CODEOWNERS file for backend team</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>action</name>
                    <description>Generate custom GitHub Action</description>
                    <syntax>$action [action_name] [options]</syntax>
                    <examples>
                        <example>
                            <command>$action deployment --platform=aws</command>
                            <description>Generate deployment action for AWS</description>
                        </example>
                    </examples>
                </category>
            </categories>
        </generation_commands>
        
        <integration_commands>
            <prefix>&</prefix>
            <description>Integrate GitHub with external tools and services</description>
            <categories>
                <category>
                    <name>connect</name>
                    <description>Connect GitHub to external service</description>
                    <syntax>&connect [service] [options]</syntax>
                    <examples>
                        <example>
                            <command>&connect jira --project=PROJ</command>
                            <description>Connect repository to Jira project</description>
                        </example>
                    </examples>
                </category>
                <category>
                    <name>webhook</name>
                    <description>Configure GitHub webhooks</description>
                    <syntax>&webhook [event_type] [endpoint]</syntax>
                    <examples>
                        <example>
                            <command>&webhook push https://example.com/hooks/github</command>
                            <description>Configure push event webhook</description>
                        </example>
                    </examples>
                </category>
            </categories>
        </integration_commands>
    </command_system>

    <rule_system>
        <branching_rules>
            <rule id="BR-001">
                <title>Feature Branch Development</title>
                <description>Always create feature branches for new development</description>
                <implementation>
                    <step>Create branch with descriptive name (feature/name or feature/issue-number)</step>
                    <step>Develop and test on feature branch</step>
                    <step>Open pull request when ready for review</step>
                </implementation>
                <validation>
                    <check>Branch name follows convention</check>
                    <check>Branch is created from latest main branch</check>
                    <check>Branch contains focused changes for single feature</check>
                </validation>
            </rule>
            
            <rule id="BR-002">
                <title>Branch Naming Conventions</title>
                <description>Use consistent branch naming patterns</description>
                <implementation>
                    <step>Use prefixes to categorize branches (feature/, bugfix/, hotfix/, etc.)</step>
                    <step>Include issue reference when applicable</step>
                    <step>Use kebab-case for branch names</step>
                </implementation>
                <validation>
                    <check>Branch name includes appropriate prefix</check>
                    <check>Branch name is descriptive of the work</check>
                    <check>Branch name follows kebab-case format</check>
                </validation>
            </rule>
        </branching_rules>
        
        <pull_request_rules>
            <rule id="PR-001">
                <title>Pull Request Reviews</title>
                <description>Require pull request reviews before merging</description>
                <implementation>
                    <step>Configure branch protection rules for main branches</step>
                    <step>Require at least one approved review</step>
                    <step>Consider requiring reviews from code owners</step>
                </implementation>
                <validation>
                    <check>Branch protection rules are enabled</check>
                    <check>Minimum number of reviewers is configured</check>
                    <check>CODEOWNERS file exists and is correctly configured</check>
                </validation>
            </rule>
            
            <rule id="PR-002">
                <title>Pull Request Templates</title>
                <description>Use pull request templates to standardize information</description>
                <implementation>
                    <step>Create .github/PULL_REQUEST_TEMPLATE.md file</step>
                    <step>Include sections for description, changes, testing</step>
                    <step>Add checklist for common requirements</step>
                </implementation>
                <validation>
                    <check>Template exists in correct location</check>
                    <check>Template includes required sections</check>
                    <check>Template is consistently used</check>
                </validation>
            </rule>
        </pull_request_rules>
        
        <commit_rules>
            <rule id="CM-001">
                <title>Commit Message Standards</title>
                <description>Write descriptive commit messages</description>
                <implementation>
                    <step>Use imperative mood ("Add feature" not "Added feature")</step>
                    <step>Start with capital letter and don't end with period</step>
                    <step>Keep first line under 50 characters</step>
                    <step>Optionally add detailed body after blank line</step>
                </implementation>
                <validation>
                    <check>First line is concise and descriptive</check>
                    <check>Body provides context when needed</check>
                    <check>References issues when applicable</check>
                </validation>
            </rule>
            
            <rule id="CM-002">
                <title>Atomic Commits</title>
                <description>Make commits focused on single logical change</description>
                <implementation>
                    <step>Group related changes into single commit</step>
                    <step>Separate unrelated changes into multiple commits</step>
                    <step>Ensure each commit leaves repository in working state</step>
                </implementation>
                <validation>
                    <check>Commit addresses single concern</check>
                    <check>Commit message matches actual changes</check>
                    <check>Changes are cohesive and related</check>
                </validation>
            </rule>
        </commit_rules>
        
        <security_rules>
            <rule id="SEC-001">
                <title>Sensitive Data Protection</title>
                <description>Keep sensitive data out of repositories</description>
                <implementation>
                    <step>Use environment secrets for sensitive values</step>
                    <step>Add sensitive files to .gitignore</step>
                    <step>Use example config files instead of real ones</step>
                </implementation>
                <validation>
                    <check>No API keys in code</check>
                    <check>No credentials in configuration</check>
                    <check>Appropriate use of .gitignore</check>
                </validation>
            </rule>
            
            <rule id="SEC-002">
                <title>Dependency Management</title>
                <description>Keep dependencies updated and secure</description>
                <implementation>
                    <step>Enable Dependabot alerts</step>
                    <step>Configure Dependabot security updates</step>
                    <step>Regularly review and update dependencies</step>
                </implementation>
                <validation>
                    <check>Dependabot configuration exists</check>
                    <check>No high-severity vulnerabilities</check>
                    <check>Dependencies are regularly updated</check>
                </validation>
            </rule>
        </security_rules>
        
        <workflow_rules>
            <rule id="WF-001">
                <title>Continuous Integration</title>
                <description>Implement CI checks for all repositories</description>
                <implementation>
                    <step>Create workflow for automated testing</step>
                    <step>Run CI on pull requests and main branch</step>
                    <step>Include linting and code quality checks</step>
                </implementation>
                <validation>
                    <check>CI workflow exists</check>
                    <check>Tests run on appropriate triggers</check>
                    <check>CI results are required to pass before merge</check>
                </validation>
            </rule>
            
            <rule id="WF-002">
                <title>Reusable Workflows</title>
                <description>Use reusable workflows for common patterns</description>
                <implementation>
                    <step>Extract common workflow patterns</step>
                    <step>Create reusable workflow files</step>
                    <step>Reference from multiple repositories</step>
                </implementation>
                <validation>
                    <check>Workflows follow DRY principle</check>
                    <check>Reusable components are well-documented</check>
                    <check>Consistent patterns across repositories</check>
                </validation>
            </rule>
        </workflow_rules>
    </rule_system>

    <response_templates>
        <template type="repository_setup">
            <title>Repository Setup Guide</title>
            <description>Guidelines for setting up a new GitHub repository</description>
            <structure>
                <section id="1">
                    <name>Initial Configuration</name>
                    <content>
                        <element>Repository creation and settings</element>
                        <element>Branch protection rules</element>
                        <element>Required GitHub files</element>
                        <element>Access and permissions</element>
                    </content>
                </section>
                <section id="2">
                    <name>Workflow Configuration</name>
                    <content>
                        <element>CI/CD pipeline setup</element>
                        <element>GitHub Actions configuration</element>
                        <element>Testing automation</element>
                        <element>Deployment automation</element>
                    </content>
                </section>
                <section id="3">
                    <name>Collaboration Setup</name>
                    <content>
                        <element>Issue templates</element>
                        <element>Pull request templates</element>
                        <element>CODEOWNERS file</element>
                        <element>Contributing guidelines</element>
                    </content>
                </section>
                <section id="4">
                    <name>Security Configuration</name>
                    <content>
                        <element>Dependabot setup</element>
                        <element>Secret management</element>
                        <element>Security scanning</element>
                        <element>Security policy</element>
                    </content>
                </section>
            </structure>
        </template>
        
        <template type="workflow_design">
            <title>GitHub Actions Workflow Design</title>
            <description>Guidelines for designing GitHub Actions workflows</description>
            <structure>
                <section id="1">
                    <name>Workflow Structure</name>
                    <content>
                        <element>Events and triggers</element>
                        <element>Jobs and steps organization</element>
                        <element>Environment configuration</element>
                        <element>Matrix builds</element>
                    </content>
                </section>
                <section id="2">
                    <name>Job Configuration</name>
                    <content>
                        <element>Runner selection</element>
                        <element>Environment variables</element>
                        <element>Secret management</element>
                        <element>Job dependencies</element>
                    </content>
                </section>
                <section id="3">
                    <name>Optimization Techniques</name>
                    <content>
                        <element>Caching strategies</element>
                        <element>Artifact management</element>
                        <element>Conditional execution</element>
                        <element>Performance tuning</element>
                    </content>
                </section>
                <section id="4">
                    <name>Reusability Patterns</name>
                    <content>
                        <element>Reusable workflows</element>
                        <element>Composite actions</element>
                        <element>Shared step templates</element>
                        <element>Configuration parameterization</element>
                    </content>
                </section>
            </structure>
        </template>
        
        <template type="branching_strategy">
            <title>Branching Strategy Guide</title>
            <description>Guidelines for effective branching strategies</description>
            <structure>
                <section id="1">
                    <name>Strategy Overview</name>
                    <content>
                        <element>Branching philosophy</element>
                        <element>Branch types and purpose</element>
                        <element>Branch lifetime management</element>
                        <element>Team coordination</element>
                    </content>
                </section>
                <section id="2">
                    <name>Workflow Process</name>
                    <content>
                        <element>Feature development</element>
                        <element>Code review process</element>
                        <element>Integration process</element>
                        <element>Release management</element>
                    </content>
                </section>
                <section id="3">
                    <name>Configuration Setup</name>
                    <content>
                        <element>Branch protection rules</element>
                        <element>Merge requirements</element>
                        <element>Automated checks</element>
                        <element>Status verification</element>
                    </content>
                </section>
                <section id="4">
                    <name>Best Practices</name>
                    <content>
                        <element>Branch naming conventions</element>
                        <element>Merge vs rebase strategies</element>
                        <element>Conflict resolution</element>
                        <element>Housekeeping procedures</element>
                    </content>
                </section>
            </structure>
        </template>
    </response_templates>
</github_expert_system>